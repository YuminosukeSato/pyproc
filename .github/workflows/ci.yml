name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: '1.21'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  test-go:
    name: Test Go (${{ matrix.go }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.21', '1.22']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          cd worker/python
          pip install -e .

      - name: Run tests
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        if: matrix.go == '1.21'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella

  test-python:
    name: Test Python (${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install Python dependencies
        run: |
          cd worker/python
          pip install -e .
          pip install pytest pytest-asyncio ruff

      - name: Run ruff
        run: |
          cd worker/python
          ruff check pyproc_worker || true

      - name: Test Python worker
        run: |
          cd worker/python
          python -m pytest -v || true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-go, test-python]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          cd worker/python
          pip install -e .

      - name: Run integration tests
        run: |
          go test -v -tags=integration ./internal/framing -run TestGoToPythonCommunication

      - name: Test examples
        run: |
          cd examples/basic
          timeout 30s go run main.go || true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test-go, test-python]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build
        run: |
          go build -v ./...

      - name: Build examples
        run: |
          cd examples/basic
          go build -v .